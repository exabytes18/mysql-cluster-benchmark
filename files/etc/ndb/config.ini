# Notes:
#     - You cannot mix localhost hostnames with non-localhost hostnames


# Set some defaults for the cluster nodes
[ndb_mgmd default]
datadir=/media/ephemeral0/ndb-data

[ndbd default]
noofreplicas=2
datadir=/media/ephemeral0/ndb-data
LockPagesInMainMemory=1

IndexMemory=10G
DataMemory=40G

ODirect=1
NoOfFragmentLogParts=8
NoOfFragmentLogFiles=16
FragmentLogFileSize=512M

MaxNoOfExecutionThreads=16
MaxNoOfConcurrentOperations=1M
MaxNoOfConcurrentTransactions=16K

# Interpretation: do not start an LCP if < (4*2^20) bytes are updated
# cluster-wide. For busy clusters, this means that as soon as one checkpoint
# finishes, another one is likely started.
TimeBetweenLocalCheckpoints=20

# deprecated in 7.4!
#DiskCheckpointSpeed=3G

# So it makes sense now. MySQL Cluster doesn't know how fast it should write
# to disk. Realistically, it should execute LCPs only as frequently and quickly
# as necessary to be able to clear out old log files to make room for incoming
# data, but MySQL Cluster isn't able to determine this on it's own. Instead, it
# will start an LCP if there's no other LCP in-progress and
# "TimeBetweenLocalCheckpoints" bytes have changed since the last LCP. So this
# gives an idea of how frequently LCPs occur. The following parameters govern
# how fast the LCP is executed.
#
# Setting these to high figures means that MySQL Cluster will write an LCP to
# disk without throttling the IO. The potential problem with this is that if
# there's a lot of updates and TimeBetweenLocalCheckpoints is relatively short,
# then MySQL cluster might queue up an LCP which will start executing
# immediately after the previous LCP has finished. With no throttling, this
# means that MySQL cluster will continuously write checkpoints to disk at full
# speed!! This could wear out SSDs prematurely if previously mentioned
# parameters are not tuned properly.
MinDiskWriteSpeed=10M
MaxDiskWriteSpeed=4G
MaxDiskWriteSpeedOtherNodeRestart=4G
MaxDiskWriteSpeedOwnRestart=4G

UndoIndexBuffer=8M
UndoDataBuffer=64M


# Reserve slots for management nodes
{%- for id, ip in mgmt_nodes %}
[ndb_mgmd]
NodeId={{ id }}
hostname={{ ip }}
{% endfor %}

# Reserve slots for data nodes
{%- for id, ip in data_nodes %}
[ndbd]
NodeId={{ id }}
hostname={{ ip }}
{% endfor %}

# Reserve slots for mysqld nodes
{%- for id, ip in mysqld_nodes %}
[mysqld]
NodeId={{ id }}
hostname={{ ip }}
{% endfor %}

# Reserve slots for api nodes (i.e. client connections)
{%- for id, ip in api_nodes %}
[api]
NodeId={{ id }}
{% endfor %}
